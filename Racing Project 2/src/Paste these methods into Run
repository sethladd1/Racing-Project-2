/* TODO
in setTime(), set started to true
*/

public String export(File file){
		
		Gson g = new Gson();
		JsonObject jso = new JsonObject();
		ArrayList<JsonObject> jsObjects =  new ArrayList<JsonObject>();
		String errorMessage = "";
		for(Racer r : racers){
			jso.addProperty("Number", r.getNumber());
			if(r.started())
				jso.addProperty("Start", time.convertToTimestamp(r.getStart()));
			else
				jso.addProperty("Start", "Did not start");
			if(r.finished()){
				jso.addProperty("Finish", time.convertToTimestamp(r.getFinish()));
				jso.addProperty("Run Time", time.convertToTimestamp(r.getRunTime()));
			}
			else{
				jso.addProperty("Finish", "Did not Finish");
				jso.addProperty("Run Time", "Did not Finish");
			}
			jsObjects.add(jso);
		}
		String output = g.toJson(jsObjects);
		try{
		FileWriter writer = new FileWriter(file);
		writer.write(output);
		writer.close();
		} catch(IOException e){
			errorMessage = "There was an error writing to file:\n"+e.getMessage();	
		}
		return errorMessage;
		
	}
	
	public void print(Run run)
	{
		System.out.println("\tRUN " + runNum);;
		for(Racer r : racers){
			System.out.println("**************************");
			System.out.println("\tRacer: " +r.getNumber());
			System.out.println("**************************");
			if(r.started())
				System.out.println("Start: " +time.convertToTimestamp(r.getStart()));
			else
				System.out.println("Start: Did not start");
			if(r.finished()){
			System.out.println("Finish: " +time.convertToTimestamp(r.getFinish()));
			System.out.println("Run Time: " +time.convertToTimestamp(r.getRunTime()));
			}
			else{
				System.out.println("Finish: Did not finish");
				System.out.println("Run Time: Did not finish");
			}
		}
	}